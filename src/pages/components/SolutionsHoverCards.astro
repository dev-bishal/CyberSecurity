---
import data from "../data/siteData";

const expandCardsContent = data.textContent.HomePage.ExpandCards;

---
<style>
    .hidden-text{
        transition: max-height 0.3s ease, padding 0.3s ease;
    }
    
    @media (min-width: 1024px) {
        .card:hover {
            width: 30%;
            text-align: left;
        }
        .card:hover .hidden-text {
            max-height: fit-content;
            padding: 10px 0;
        }
        .card:hover .card-content {
            align-items: normal;
        }
        .card:hover .card-header, .card:hover .card-header .iconFileSpan{
            width: 100%;
        }
        .card:hover .card-headerLeft{
            align-items: normal;
        }
    }

</style>
<section class="solutionCardsContainer bg-gradient-to-bl from-[#102049] to-[#032309] text-white py-9" class:list={[!expandCardsContent.isShown && "hidden"]}>
    
    <div class="wrapper relative size-full gap-4 flex flex-col justify-center items-center overflow-hidden">
        
        <div class="container1320 lg:w-[1120px] xl:w-[1440px] pt-10" >
            <div class="textContent w-full lg:px-0 px-5 lg:w-[50%] lg:ml-10" data-aos="fade-down" data-aos-delay="500">
                <span class="uppercase">{expandCardsContent.title}</span>
                <p class="my-6 text-4xl font-semibold">{expandCardsContent.heading}</p>
            </div>
    
            <div class="hover-card-container px-5 flex justify-center items-center lg:flex-row flex-col" data-aos="fade-up" data-aos-delay="500">

                {
                    expandCardsContent.hoverCards.slice(0, 5).map((card, index)=>(
                        <div class="card p-4 px-6 w-full lg:w-[18%] lg:h-[70vh] xl:h-[50vh] flex justify-center items-center text-center bg-gradient-to-br from-[#085c9c] to-[#027252] overflow-hidden transition-all duration-300 ease-in-out"
                        class:list={
                            [
                                (index >= 0 && index < 4) && "lg:border-r lg:border-white",
                                index == 0 && "rounded-tl-xl lg:rounded-bl-xl lg:rounded-tr-none rounded-tr-xl",
                                index == 4 && "lg:rounded-tr-xl rounded-br-xl lg:rounded-bl-none rounded-bl-xl",
                            ]
                        }
                        >
                            <div class="card-content w-full flex flex-col items-center justify-center">
                                <div class="card-header lg:cursor-none cursor-pointer flex lg:justify-center justify-between items-center lg:w-fit w-full">
                                    <span class="card-headerLeft lg:w-full w-fit flex lg:flex-col flex-row items-center justify-center">
                                        <span class="iconFileSpan lg:border-b border-gray-300 lg:pb-4 lg:mb-3 lg:pr-0 pr-3 w-fit">
                                            <img src={`/assets/images/${card.iconFile}`} alt={`hoverCards Icon ${card.cardTitle}`} class="lg:size-14 size-10" />
                                        </span>
                                        <h3 class="lg:text-xl text-base font-semibold">{card.cardTitle}</h3>
                                    </span>

                                    <i class="fa-sharp fa-regular fa-angle-down lg:hidden block transition-all ease-in-out duration-150"></i>
                                </div>
                                <div class="hidden-text w-full max-h-0 overflow-hidden text-left">
                                    <p class="my-6 mb-3">{card.cardTextContent}</p>
                                    {
                                        card.cardHasLink && 
                                        <a class="rounded-full lg:w-fit w-full bg-[#03eac1] flex lg:justify-normal justify-center items-center gap-3 px-8 py-2 font-bold shadow-lg" href={card.cardRedirectLink}>{card.cardRedirectText}</a>
                                    }
                                </div>
                            </div>
                        </div>
                    ))
                }
            </div>
        </div>
    
    </div>
</section>

<script is:inline>
    var allCardsHeader = document.querySelectorAll(".solutionCardsContainer .card .card-header");

    allCardsHeader.forEach(CardsHeader => {
        CardsHeader.addEventListener("click", ()=>{
            CardsHeader.nextElementSibling.classList.toggle("max-h-0");
            CardsHeader.nextElementSibling.classList.toggle("max-h-[250px]");
            CardsHeader.children[1].classList.toggle("rotate-180");
        })
    });
</script>